<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>psamolysov.bluemix.wlp.demo</groupId>
    <artifactId>liberty-microprofile-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Liberty Profile on Bluemix Demo - Microprofile-based (1.2) Adapter for Cloudant - Application</name>

    <parent>
        <groupId>psamolysov.bluemix.wlp.demo</groupId>
        <artifactId>liberty-microprofile-demo</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <properties>
        <maven.compile.source>1.8</maven.compile.source>
        <maven.compile.target>1.8</maven.compile.target>
    </properties>
    
    <profiles>
        <profile>
            <id>fabric8</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- 
                            On Windows, please, download gofabric8.exe using 
                            # mvn fabric8:setup -Pfabric8
                            All environment variables must be set before using this plugin, see the instruction
                            generated by:
                            # gofabric8 docker-env
                            After building, you can use 
                            # mvn fabric8:run -Pfabric8
                            to run the application on a cluster, the external port 
                        -->
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <version>${fabric8.plugin.version}</version>
                        <configuration>
                            <mode>kubernetes</mode>
                            <namespace>${docker.user}</namespace>
                            <images>
                                <image>                                    
                                    <name>${docker.user}/${project.artifactId}:${project.version}</name>
                                    <build>
                                        <from>websphere-liberty:microProfile</from>
                                        <!-- basic Dockerfile commands -->
                                        <assembly>
                                            <basedir>/opt/ibm/wlp/usr/servers/defaultServer/dropins</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                    </build>
                                    <watch>
                                        <interval>5000</interval>
                                    </watch>
                                </image>
                            </images>
                                <enricher>
                                    <config>
                                        <!-- 
                                            expose the service externally by Kubernetes
                                        -->
                                        <fmp-service>
                                            <type>NodePort</type>
                                            <port>9080:9080</port> <!-- if the port was unset, the expose would be ignored -->
                                        </fmp-service>
                                    </config>
                                </enricher>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
</profiles>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>liberty-microprofile-app</warName>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
